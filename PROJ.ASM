;Write  a  program  to  find  the smallest number  in  the  given  stack,  consisting  of  15  random numbersand divide the whole stackwith that number without changing the positionof the stack.

jmp start

;data


;code
start: nop
LXI B , 0002H ;INITIALIZING BC REG PAIR VITH VAL
PUSH B ;PUSH TO STACK STARTING FROM FFFF DEFAULT
LXI B ,0004H
PUSH B
LXI B , 0004H ;INITIALIZING BC REG PAIR VITH VAL
PUSH B ;PUSH TO STACK STARTING FROM FFFF DEFAULT
LXI B ,0006H
PUSH B
LXI B ,000AH
PUSH B
LXI B ,0008H
PUSH B
LXI B ,0010H
PUSH B
LXI B ,000EH
PUSH B
LXI B ,000AH
PUSH B
LXI B ,0002H
PUSH B
LXI B , 0002H ;INITIALIZING BC REG PAIR VITH VAL
PUSH B ;PUSH TO STACK STARTING FROM FFFF DEFAULT
LXI B ,0004H
PUSH B
LXI B ,0002H
PUSH B
LXI B ,000AH
PUSH B
LXI B ,000CH
PUSH B
CALL SSTACKMASTER
CALL SMALLESTFINDER
CALL DIVIDER
HLT ;THANK YOU


SSTACKMASTER: NOP ;TO HAVE ENTIRE STACK VALUES IN 31 -31+15 ADRESSES
LXI H , 0FFFDH; STARTING ADRESS OF STACKVALUE
LXI B , 0001FH ;ADDRESS 31 STORED IN B-C
MVI D , 0FH;TO LOOP 15 VAL
LOOP1: NOP
MOV A , M ;MOVE  [M] TO ACC
DCX H     ;DEC VAL IN STACKPOINT AND STORE IN H
DCX H
STAX B ;STOR VAL IN THE ACC TO ADDR IN BPAIR
INX B ;INC BC PAIR
DCR D ;DEC COUNTER
JNZ LOOP1
RET



SMALLESTFINDER: NOP ;SMALL IN E AS GOAL
MVI D ,007H ; 15/2  LOOPS
LXI H ,001EH ; STORE ADDR IE 31 - 1 IN H
LOOP3: INX H ;SO THAT HL KEEPS INC IN LOOP STARTS FROM 31
MOV A , M ; MOV [HPAIR] TO A
INX H
MOV B , M ;MOV [M] IE THE NEXT WORD TO B
CMP B ;TO JUMP IF A IS LESSER
JM LOOP5 ;JUMP IF NEG IE A IS LESSER
JP LOOP7 ;JUMP IF A IS GREATER
LOOP5: MOV E ,A ;MOV A TO E
DCR D ;DECREMEHT LOOP
JZ SMALLESTFINDEREND ;JUMP IF D IS ZER
JMP LOOP3
LOOP7: NOP
MOV E , B ; E IS LESSER
DCR D
JZ SMALLESTFINDEREND
JMP LOOP3 
SMALLESTFINDEREND: RET



DIVIDER: NOP ;DIVIDES AND THEN STORES IT BACK IN STACK
LXI H , 0FFFFH ;SET ADRESS AS THE AVLUE OF STACK P + 2
MVI C , 010H; COUNTER 16
LOOP9: DCR C;DECREMENT LOOP
JZ LOOP17
DCX H;
DCX H ;SET CORRECT STACK PTR IN FIRST LOOP
MVI D ,00H ;INITIALIZE ANS
MOV A ,M ; LOAD A THE VALUE OF [H]
LOOP15: SUB E ;SUB E FROM A AND STORE IN A
JM LOOP11 ; IF ANS IS GOT THEN CONTINUE LOOP FOR NEXT VAL
INR D
JMP LOOP15
LOOP11: NOP
MOV M , D ;MOV ANS TO LOC 
JMP LOOP9
LOOP17: NOP





RET









 